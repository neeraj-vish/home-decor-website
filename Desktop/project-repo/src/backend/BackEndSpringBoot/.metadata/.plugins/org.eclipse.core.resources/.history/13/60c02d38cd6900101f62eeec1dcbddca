package com.homedecor.service.impl;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.homedecor.entity.Buyer;
import com.homedecor.repository.BuyerRepository;
import com.homedecor.service.BuyerService;

@Service
public class BuyerServiceImpl implements BuyerService {

    private final BuyerRepository buyerRepository;

    @Autowired
    public BuyerServiceImpl(BuyerRepository buyerRepository) {
        this.buyerRepository = buyerRepository;
    }

    @Override
    public Buyer saveBuyer(Buyer buyer) {
        return buyerRepository.save(buyer);
    }

    @Override
    public Buyer updateBuyer(Integer buyerId, Buyer buyer) {
        Optional<Buyer> existingBuyerOpt = buyerRepository.findById(buyerId);
        if (existingBuyerOpt.isPresent()) {
            Buyer existingBuyer = existingBuyerOpt.get();
            existingBuyer.setFirstName(buyer.getFirstName());
            existingBuyer.setLastName(buyer.getLastName());
            existingBuyer.setAddress(buyer.getAddress());
            existingBuyer.setPhoneNumber(buyer.getPhoneNumber());
            existingBuyer.setUser(buyer.getUser());
            return buyerRepository.save(existingBuyer);
        } else {
            throw new RuntimeException("Buyer not found with id: " + buyerId);
        }
    }

    @Override
    public Optional<Buyer> getBuyerById(Integer buyerId) {
        return buyerRepository.findById(buyerId);
    }

    @Override
    public List<Buyer> getAllBuyers() {
        return buyerRepository.findAll();
    }

    @Override
    public void deleteBuyer(Integer buyerId) {
        buyerRepository.deleteById(buyerId);
    }
}
